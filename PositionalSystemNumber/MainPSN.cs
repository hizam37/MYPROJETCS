using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace PositionalSystemNumber //Тела содержающие интерфейс 
{
    interface IConvert  // объявим  интерфейс содержающие объявление свойства string,int
    {
        string Decimal { set; }  /*объявим и читаем переменный "Decimal" тип сторка который будет использоваться в качестве 
                                  ввод, которые будут рассматриваться как десятичное число,
                                  которое будет преобразовано из одной позиции в другую позицию*/
        int From_base { set; }  /*объявим и читаем переменный "From_base" тип 
                                  целое число который будет использоваться в качестве начального 
                                  преобразования базы для десятичных дробей*/
        int To_base { set; }   /*объявим и читаем переменный "To_base" тип целое число который
                                 будет использоваться в качестве финального преобразования базы для десятичных дробей*/
        void Convert(); //Прототипная функция который будет реализован внутри в классе преобразующие базу из одной позиции в другую.
    }
    class DecimalConverter : IConvert   //Класс содержающие свойства реализацию string,int
    {
        public string Decimal { get; set; } // Чтобы смогли использовать перременный "Decimal" интерфейса "IConvert" в класс "BaseConvert" мы читаем и записываем его
        public int From_base { get; set; } // Чтобы смогли использовать перременный "From_base" интерфейса в класс "BaseConvert" мы читаем и записываем его.
        public int To_base { get; set; } // Чтобы смогли использовать перременный "To_base" интерфейса в класс "BaseConvert" мы читаем и записываем его.
        void IConvert.Convert() // //Вызовем член интерфеса "IConvert" и реализуем ее функция 
        {
            try /*Блок try содержит защищенный код, который может вызвать исключение "FormatException,ArgumentException,Exception при возникнавения ощибки*/
            {


                Console.WriteLine("Введите строку"); //Пишем в консоле "Введите строку"

                this.Decimal = Console.ReadLine(); //читаем переменный ввод "Decimal" тип строка который инициализируется пользователем в консоли
                if (Decimal.Contains("-")) //если ввод десятичные содержить минус 
                {
                    throw new Exception("Минус не разрещен!");//тогла программа будет завершено с ошибкой и вводить в консоле что "Минус не разрещен!"

                }
                if (Decimal.Any(char.IsLetter)) //если ввод десятичные содержить буквы 
                {
                    throw new Exception("Десятичная дробь не должна содержать буквы!"); // тогла программа будет завершено с ошибкой и вводить в консоле что "Десятичная дробь не должна содержать буквы!"
                }

                int Decimal_of_int_type = Convert.ToInt32(Decimal);//Объявим перремнные "Decimal_of_int_type" который будет преобразовать вводный строка "Decimal" на целое число

                Console.WriteLine("От_бaза ");//Пишем в консоле "от база"

                this.From_base = int.Parse(Console.ReadLine()); //читаем переменный ввод "From_base" тип целое число в консоли  тип целое число

                string First_Converter = Convert.ToString(Decimal_of_int_type, From_base); /* Объявим перремнные "First_Converter" который будет которые будет рассматриваться как начальное преобразование сначала принимать ввод Десятичные "Decimal_of_int_type"
                                                                                                    и потом преобразвать в база Десятичный на Десятичный или восьмеричный или
                                                                                                    шестнадцатеричная или двоичный зависимо от ввод позлователи */

                Console.WriteLine("В_базe "); //Пишем в консоле "В база"

                this.To_base = int.Parse(Console.ReadLine()); //Объявим ввод "To_base" тип целое число который инициализируется пользователем в консоли  

                string Final_Converter = Convert.ToString(Decimal_of_int_type, To_base); /* Объявим перремнные "Final_Converter" который будет которые будет рассматриваться как финальное преобразование сначала принимать ввод Десятичные "Decimal_of_int_type"
                                                                                                    и потом преобразвать в база Десятичный на Десятичный или восьмеричный или
                                                                                                    шестнадцатеричная или двоичный зависимо от ввод позлователи */


                Console.WriteLine($"{Decimal} десятичного типа изменен с базового {From_base} в база {To_base} = {Final_Converter}");/* В консоли будет выводить резултат преобразование десятичные от шестнадцатеричного либо двоичный либо десятичный
                                                                                                                                          либо возмеричный в шестнадцатеричного либо двоичный либо десятичный либо возмеричный зависимо от ввод ползователя */

            }
            catch (ArgumentException) /* Прихватить исключение если аргумент функции "ToString()" которые 
                                         исползуется для преобразование десятичные на Десятичный или восьмеричный или
                                         шестнадцатеричная или двоичный зависимо от ввод позлователи содержит цифры, отличные от позиционных систем счисления 8.12,10 соответвенно тогда исключения будет
                                         выводить "нету такого базу!*/
            {
                Console.WriteLine("нету такого базу!");
            }
            catch (FormatException) /* Прихватить исключение если аргумент функции "ToString()" которые 
                                         исползуется для преобразование десятичные на Десятичный или восьмеричный или
                                         шестнадцатеричная или двоичный зависимо от ввод позлователи содержит буква исключения тогда будет
                                         выводить "нету такого базу!*/
            {
                Console.WriteLine("нету такого базу!");
            }
            catch (Exception r) //Создадим своей исключение для существования знак минус или буквы для десятичные ввод 
            {
                Console.WriteLine($"{r.Message}");
            }
        }


    }

}